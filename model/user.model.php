<?php
/**
 *		MiaoBlog OpenSource Web Frame
 *		PoweredBy PlanetMiao  &&  DesignedBy hyMiao@PlanetMiaoTeam
 * 		Version: 0.0.0 Beta
 * 		Generated By hyMiao on Jan.29th, 2013
 *		More info: http://www.planetMiao.com
 */
 
/**
 *		MiaoBlog UserModel类文件
 *		
 *		本文件用于配置User模型
 *		在个人博客的前提下，有关用户的添加删除操作并不存在，
 *		因而取消了useradd delete以及用户状态组别修改等操作
 *		只能提供用户信息查询以及可更改信息的修改操作
 */

class UserModel extends Model{
	
	function __construct(){
		parent::__construct();
	}
	
	/**
	 *		MiaoBlog UserModel::userModel_getUserInfo()函数
	 *		
	 *		函数返回user表内信息，
	 *		个人博客版本中只有一个用户，
	 *		因而直接返回表内全部信息即可
	 *		返回值即为表中的用户信息
	 */
	public function userModel_getUserInfo(){
		$sql = 'SELECT * FROM blog_user';
		//var_dump($sql);
				
		return $this->pdodbh->db_query($sql);
	}
	
	/**
	 *		MiaoBlog UserModel::userModel_changeInfo()函数
	 *		
	 *		函数参数为函数运行模式和参数数组，
	 *		有两种运行模式，一种是系统修改用户登录信息，另一种是用户修改个人信息
	 *		第一种情况下数组只有一个参数为last_access_ip，必填
	 *		第二种情况下数组最多有五个参数，分别是username，pwd，email，phone，comment
	 *		参数数组中的值即为将要进行修改的键和对应值
	 *		字段无值的情况下该键值对应值设置为null(或者直接舍弃不设置该字段也可以)
	 *		返回值为一个bool量，执行成功返回true，失败返回false
	 */
	public function userModel_changeInfo($mode = null, $params = array()){
		$sql = '';
		
		switch($mode)
		{
			case 'sys':
				$last_access_time = date('Y-m-d H:i:s');
				$last_access_ip = array_pop($params);
				$sql = 'UPDATE blog_user '.
						'SET last_access_time = \''.$last_access_time.'\''.
						', last_access_ip = \''.$last_access_ip.'\'';
				break;
			case 'user':
				$values = '';
				foreach ($params as $key=>$value){
					if(isset($value)){
						if($values !== ''){
							$values = $values.', ';
						}
						$values = $values.$key.' = \''.$value.'\'';
					}
				}
				$sql = 'UPDATE blog_user '.
						'SET '.$values;
				break;
			default: return false;
		}
		$result = $this->pdodbh->db_update($sql);
		
		//var_dump($sql);
		//var_dump($result);
		return $result;	
	}
	
	/**
	 *		MiaoBlog UserModel::userModel_add()函数
	 *		
	 *		函数参数为数组，该数组最多含有十个元素，元素键值对应blog_user表的十个字段名，
	 *		另，uid设置为自增，不应该进行赋值
	 *		字段无值的情况下该键值对应值设置为null(或者直接舍弃不设置该字段也可以)
	 *		返回值为一个bool量，执行成功返回true，失败返回false
	 */
	public function userModel_add($params = array()){
		$keys = '';
		$values = '';
		$sql = '';
		foreach ($params as $key=>$value){
			if(isset($value)){
				if($values !== ''){
					$keys = $keys.', ';
					$values = $values.', ';
				}
				$keys = $keys.$key;
				$values = $values.'\''.$value.'\'';
			}
		}
		$keys = $keys.', sign_time';
		$date = date('Y-m-d H:i:s');
		$date = '\''.$date.'\'';
		$values = $values.', '.$date;
		$sql = 'INSERT INTO blog_user ('.$keys.')'.' VALUES ('.$values.')';
		$result = $this->pdodbh->db_insert($sql);
		//var_dump($sql);
		
		return $result;
	}
	
	/**
	 *		以上针对于blog_user表产生操作的函数，其参数数组考虑了“键值=>null”这种组合方式
	 *		若是不考虑该方式认定值为null时其键值不存在的话则可以对函数逻辑重构进行大量简化
	 */
}


//$mo = new UserModel();
//$info_query=array('uid'=>null, 'gid'=>2, 'email'=>null, 'phone'=>null);
//var_dump($mo->userModel_getUserInfo($info_query));
//$mo->userModel_add(array('uid'=>1, 'gid'=>2, 'info'=>'123'));
//$mo->userModel_changeGroup(array('uid'=>12, 'username'=>null, 'gid'=>13));
//$mo->userModel_changeInfo('user', array('uid'=>null, 'username'=>'222', 'email'=>'123@123.com', 'phone'=>'123231'));

?>