<?php
/**
 *		MiaoBlog OpenSource Web Frame
 *		PoweredBy PlanetMiao  &&  DesignedBy hyMiao@PlanetMiaoTeam
 * 		Version: 0.0.0 Beta
 * 		Generated By hyMiao on Jan.27th, 2013
 *		More info: http://www.planetMiao.com
 */
 
/**
 *		MiaoBlog数据库类文件
 *		
 *		本文件用于声明数据库基础类
 *		以提供其他文件所需要进行的数据库相关操作
 */

class DB_pdo{
	private $db_type = '';
	private $db_host = '';
	private $db_name = '';
	private $db_user = '';
	private $db_password = '';
	private $dbh = null;
	
	//构造器函数，依据输入参数建立一个对应的数据库PDO连接
	function __construct($db_type, $db_host, $db_name, $db_user, $db_password){
		$this->dbh = $this->db_connect($db_type, $db_host, $db_name, $db_user, $db_password);

	}
	
	//数据库PDO连接切断函数
	function db_disconnect(){
		if(isset($this->dbh)){
			$this->dbh=null;
		}
	}
	
	//析构函数，调用db_disconnect()函数释放PDO连接
	//保证实例对象释放之前将数据库连接释放掉
	function __destruct(){
		$this->db_disconnect();
	}
		
	//数据库连接函数
	private function db_connect($db_type, $db_host, $db_name, $db_user, $db_password){
		try{
			$dsn = $db_type.':host='.$db_host.';dbname='.$db_name;
			//var_dump($dsn);var_dump($db_user);	var_dump($db_password);	
			$dbh = new PDO($dsn, $db_user, $db_password);
			$dbh->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
		}catch(PDOException $e){
			print "DB Connect Error!Error Msg:".$e->getMessage()."<br />";
			die();
		}
		
		return $dbh;
	}
		
	//数据库查询函数
	public function db_query($sql){
		$result = $this->dbh->prepare($sql);
		$result->execute();
		
		return $result->fetchAll();
	}
	
	//数据库查询指定列，返回值为该列所有值组成的数组
	//数组下标为行号（从0开始）
	//建议如果要取表的特定列的值请用本函数而不是上面那个函数...
	#当然你试试就懂为什么了#卖个萌不要介意...
	public function db_column_query($sql){
		$result = $this->dbh->prepare($sql);
		$result->execute();
		
		return $result->fetchAll(PDO::FETCH_COLUMN, 0);
	}
	
	//为了细化函数功能，于是乎将几个数据库的操作功能划分为不同函数进行处理
	
	//数据库记录插入函数	
	public function db_insert($sql){
		$dbh = $this->dbh;
		try{
			$dbh->beginTransaction();
			$result = $dbh->exec($sql);
			$dbh->commit();
		}catch(POException $e){
			$dbh->rollBack();
			print "DB insert Error!Error Msg:".$e->getMessage()."<br />";
			die();
		}
		//var_dump($result);
		//var_dump($dbh->errorInfo());
		//var_dump($dbh->errorCode());
		
		return (bool)$result;
	}	 
		
	//数据库记录删除函数
	public function db_delete($sql){
		$dbh = $this->dbh;
		try{
			$dbh->beginTransaction();
			$result = $dbh->exec($sql);
			$dbh->commit();
		}catch(PDOException $e){
			$dbh->rollBack();
			print "DB delete Error!Error Msg:".$e->getMessage()."<br />";
			die();
		}
		
		return (bool)$result;
	}
	
	//数据库记录更新函数
	public function db_update($sql){
		$dbh = $this->dbh;
		try{
			$dbh->beginTransaction();
			$result = $dbh->exec($sql);
			$dbh->commit();
		}catch(PDOException $e){
			$dbh->rollBack();
			print "DB update Error!Error Msg:".$e->getMessage()."<br />";
			die();
		}
		
		return (bool)$result;
	}
	
	//数据库操作通用操作函数
	public function db_exec($sql){
		$dbh = $this->dbh;
		try{
			$dbh->beginTransaction();
			$result = $dbh->exec($sql);
			$dbh->commit();
		}catch(PDOException $e){
			$dbh->rollBack();
			print "DB execute Error!Error Msg:".$e->getMessage()."<br />";
			die();
		}	
		
		return (bool)$result;
	}
	
	//说实话，上面四个函数合并为一个通用操作函数即可
	//细化完全出于个人喜好，使用时可以进行合并
	//不过要注意对其余文件中涉及数据库操作函数的内容进行修改
	
	/**数据库基础类get方法，使得外部可以直接获取对象变量的值
	function __get($property_name){
		if(isset($this->$property_name)){
			return $this->$property_name;
		}else{
			return null;
		}
	}
	*/
	
	/**数据库基础类set方法，使得外部可以直接设置对象变量的值
	function __set($property_name, $value){
		$this->$property_name = $value;
	}
	*/
}
	
#unit_test	
/*
$pdotest = new DB_pdo('mysql', 'localhost', 'learn', 'learn', 'learn');
//var_dump($pdotest->db_query('SELECT * FROM user'));	
$keys = 'uid, gid, info, time';
$a = '121';
$b = '11';
$c = '1264';
$d = date('Y-m-d H:i:s');
$values = $a.','.$b.','.$c.',\''.$d.'\'';
var_dump(('INSERT INTO user ('.$keys.') VALUES ('.$values.')'));
var_dump($pdotest->db_insert('INSERT INTO user ('.$keys.') VALUES ('.$values.')'));
*/
?>